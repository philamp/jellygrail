# not usable as is, has to be deleted TODO DELETE
dav_ext_lock_zone zone=a:10m;
http {
	map $uri $is_nfo {
	default 0;
	~*\.nfo$ 1;
	}
	server { 
	  #server_name webdav.mashnp.sk; 
	  set $webdav_root "/Video_Library/";
	  dav_ext_lock zone=a;
	  listen 8085;
	
	  location /pics {
	        alias /jellygrail/jellyfin/config/metadata;
	        autoindex on; #TODO toremove when tested
	
	        image_filter_buffer 10M;
	        image_filter_jpeg_quality 75;
	
	        location ~* \.jpg$ {
	                image_filter resize 500 500;
	        }
	  }
	
	  location / {
	
		root			$webdav_root;
		error_page		599 = @propfind_handler;
		error_page		598 = @delete_handler;
		error_page		597 = @copy_move_handler;
		open_file_cache		off;
	
		access_log /var/log/nginx/webdav_access.log;
		error_log /var/log/nginx/webdav_error.log debug;
	
		send_timeout		3600;
		client_body_timeout	3600;
		keepalive_timeout	3600;
		lingering_timeout	3600;
		client_max_body_size	10G;
	
		if ($request_method = PROPFIND) {
			return 599;
		}
	
		if ($request_method = PROPPATCH) { # Unsupported, allways return OK.
			add_header	Content-Type 'text/xml';
			return		207 '<?xml version="1.0"?><a:multistatus xmlns:a="DAV:"><a:response><a:propstat><a:status>HTTP/1.1 200 OK</a:status></a:propstat></a:response></a:multistatus>';
		}
	
		if ($request_method = MKCOL) { # Microsoft specific handle: add trailing slash.
			rewrite ^(.*[^/])$ $1/ break;
		}
	
		if ($request_method = DELETE) {
			return 598;
		}
	
		if ($request_method = COPY) {
			return 597;
		}
	
		if ($request_method = MOVE) {
			return 597;
		}
	
		dav_methods		PUT MKCOL;
		dav_ext_methods		OPTIONS LOCK UNLOCK;
		create_full_put_path	on;
		min_delete_depth	0;
		dav_access		user:rw group:rw all:rw;
	
		autoindex		on;
		autoindex_exact_size	on;
		autoindex_localtime	on;
	
		if ($request_method = OPTIONS) {
			add_header	Allow 'OPTIONS, GET, HEAD, POST, PUT, MKCOL, MOVE, COPY, DELETE, PROPFIND, PROPPATCH, LOCK, UNLOCK';
			add_header	DAV '1, 2';
			return 200;
		}

		if ($is_nfo) {
		sub_filter '[HOST_PORT]' '#WDLH#';
		sub_filter_last_modified on;
		sub_filter_once on;
		sub_filter_types *;
		default_type 'text/plain';
		}

	  }
	  location @propfind_handler {
		internal;
	
		open_file_cache	off;
		if (!-e $webdav_root/$uri) { # Microsoft specific handle.
			return 404;
		}
		root			$webdav_root;
		dav_ext_methods		PROPFIND;
	  }
	  location @delete_handler {
		internal;
	
		open_file_cache	off;
		if (-d $webdav_root/$uri) { # Microsoft specific handle: Add trailing slash to dirs.
			rewrite ^(.*[^/])$ $1/ break;
		}
		root			$webdav_root;
		dav_methods		DELETE;
	  }
	  location @copy_move_handler {
		internal;
	
		open_file_cache	off;
		if (-d $webdav_root/$uri) { # Microsoft specific handle: Add trailing slash to dirs.
			more_set_input_headers 'Destination: $http_destination/';
			rewrite ^(.*[^/])$ $1/ break;
		}
		root			$webdav_root;
		dav_methods		COPY MOVE;
	  }
	}
}
